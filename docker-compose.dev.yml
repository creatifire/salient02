version: '3.8'

services:
  postgres:
    image: postgres:17.6-alpine
    container_name: salient-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: salient_dev
      POSTGRES_USER: salient_user
      POSTGRES_PASSWORD: salient_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U salient_user -d salient_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - salient-dev

  adminer:
    image: adminer:5.3.0
    container_name: salient-adminer-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - salient-dev

  redis:
    image: redis:8.2.1-alpine
    container_name: salient-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - salient-dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  salient-dev:
    driver: bridge
